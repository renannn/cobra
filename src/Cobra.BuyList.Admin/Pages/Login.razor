@page "/login"

@inject IAuthenticationService _authenticationService
@inject NavigationManager _navigationManager

<div class="pt-5">
	<div class="container">
		<div class="row">
			<div class="col-md-5 mx-auto">
				<div class="card card-body">
					<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
						<DataAnnotationsValidator />
						<h1 class="text-center"> Bem vindo. </h1>
						<div class="form-group required">
							<label for="username"> Entre seu Usuário </label>
							<input id="username" Placeholder="Nome de Usuário" Class="form-control text-lowercase" @bind="model.Username" />
							<ValidationMessage For="@(() => model.Username)" />
						</div>
						<div class="form-group required">

							<label class="d-flex flex-row align-items-center" for="password">
								Entre sua Senha
								<a class="ml-auto border-link small-xl" href="/login/recoverypassword">
									Esqueceu sua Senha?
								</a>
							</label>
							<input id="password" type="password" Placeholder="Senha" Role="TextRole.Password" Class="form-control text-lowercase" @bind="model.Password" />
							<ValidationMessage For="@(() => model.Password)" />
						</div>

						<div class="form-group pt-1">
							<button type="submit" class="btn btn-primary btn-block">Entrar</button>
						</div>
					</EditForm>
				</div>
			</div>
		</div>
	</div>
</div>

@code {

	private LoginForm model = new LoginForm();

	private async void OnValidSubmit()
	{
		await _authenticationService.AuthWithPasswordAsync(new LoginRequest
		{
			Username = model.Username,
			Password = model.Password
		});

		if (_authenticationService.IsAuthenticatedUsingToken)
		{
			var returnUrl = _navigationManager.QueryString("returnUrl") ?? "";
			_navigationManager.NavigateTo(returnUrl);
		}
	}


	//async Task onLoginButtonCliquedAsync()
	//{
	//	try
	//	{
	//		Erro = false;
	//		ErrorMessage = "";
	//		var loginResponse = await _loginApi.AuthAsync(new LoginRequest()
	//		{
	//			Username = UserName,
	//			Password = Password,
	//			GrantType = "password"
	//		});


	//	}
	//	catch (Exception ex)
	//	{
	//		Erro = true;
	//		ErrorMessage = ex.Message;
	//	}
		//}

}